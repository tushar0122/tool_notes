How to choose a database

SQL vs NoSQL
    => SQL databases are primarily called Relational Databases (RDBMS); 
    whereas NoSQL databases are primarily called non-relational or distributed databases. 

SQL Nature 
    => In almost all situations SQL databases are vertically scalable. This means that you can increase the load on a single server by increasing things like RAM, CPU, or SSD. 
    => SQL databases follow ACID properties 

SQL Advantages
    => These databases are best suited for complex queries	

SQL Disadvantages 
    => SQL requires you to use predefined schemas to determine the structure of your data before you work with it. Also, all of your data must follow the same structure. This can require significant up-front preparation which means that a change in the structure would be both difficult and disruptive to your whole system. 
    => 

NoSQL Nature 
    => But on the other hand, NoSQL databases are horizontally scalable. This means that you handle more traffic by sharing, or adding more servers in your NoSQL database.  Thus NoSQL can ultimately become larger and more powerful, making these databases the preferred choice for large or ever-changing data sets.
    => NoSQL database follows the Brewers CAP theorem

NoSQL Advantages 
    => A NoSQL database has a dynamic schema for unstructured data.Data is stored in many ways which means it can be document-oriented, column-oriented, graph-based, or organized as a key-value store. This flexibility means that documents can be created without having a defined structure first. Also, each document can have its own unique structure. The syntax varies from database to database, and you can add fields as you go. 
    => 

When to use SQL 
    => SQL is a good choice when working with related data. Relational databases are efficient, flexible, and easily accessed by any application. A benefit of a relational database is that when one user updates a specific record, every instance of the database automatically refreshes, and that information is provided in real-time.

When to use NoSQL 
    => While NoSQL is good when the availability of big data is more crucial, SQL is valued for ensuring data validity. It’s also a wise decision when a business needs to expand in response to shifting customer demands. NoSQL offers high performance, flexibility, and ease of use.
    => NoSQL is also a wise choice when dealing with large or constantly changing data sets, flexible data models, or requirements that don’t fit into a relational model. Document databases, like CouchDB, MongoDB, and Amazon DocumentDB, are useful for handling large amounts of unstructured data.