Inter thread communication  
    => Inter-thread communication or Co-operation is all about allowing synchronized threads to communicate with each other.
    => Cooperation (Inter-thread communication) is a mechanism in which a thread is paused running in its critical section and another thread is allowed to enter (or lock) in the same critical section to be executed.It is implemented by following methods of Object class:
    => wait()
    => notify()
    => notifyAll()

wait()
    => The wait() method causes current thread to release the lock and wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
    => The current thread must own this object's monitor, so it must be called from the synchronized method only otherwise it will throw exception.

notify()
    => The notify() method wakes up a single thread that is waiting on this object's monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation.

notifyAll()
    => Wakes up all threads that are waiting on this object's monitor.

sleep()
    => sleep(): As the name suggests, it is a static method that pauses or stops the execution of the current thread for some specified period. It doesnâ€™t release the lock while waiting and is mostly used to introduce pause on execution. It is defined in thread class, and no need to call from a synchronized context.  

